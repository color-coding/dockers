# 基于redhat ubi-minimal构建tomcat镜像
FROM colorcoding/openjdk:8-jdk-ubi-minimal as builder

# 维护者
LABEL maintainer="Niuren.Zhu <niuren.zhu@icloud.com>"

ENV CATALINA_HOME /usr/local/tomcat
ENV PATH $CATALINA_HOME/bin:$PATH
RUN mkdir -p "$CATALINA_HOME"
WORKDIR $CATALINA_HOME

# let "Tomcat Native" live somewhere isolated
ENV TOMCAT_NATIVE_LIBDIR $CATALINA_HOME/native-jni-lib
ENV LD_LIBRARY_PATH ${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$TOMCAT_NATIVE_LIBDIR

ENV TOMCAT_MAJOR 9
ENV TOMCAT_VERSION 9.0.106
ENV TOMCAT_SHA512 0b316af119fd9a69761c20bc7f9959513884002fc60f490af6335380a3a62549777bf35a1e8dd3c448e56da8ddcb9dc2301d3b01bba304537ca40456c650c25a

RUN set -eux; \
    \
    microdnf install -y --nodocs --setopt=install_weak_deps=0 \
        gnupg gzip tar findutils apr openssl; \
    \
    ddist() { \
        local f="$1"; shift; \
        local distFile="$1"; shift; \
        local mvnFile="${1:-}"; \
        local success=; \
        local distUrl=; \
        for distUrl in \
# https://apache.org/history/mirror-history.html
            "https://dlcdn.apache.org/$distFile" \
# if the version is outdated, we have to pull from the archive
            "https://archive.apache.org/dist/$distFile" \
# if all else fails, let's try Maven (https://www.mail-archive.com/users@tomcat.apache.org/msg134940.html; https://mvnrepository.com/artifact/org.apache.tomcat/tomcat; https://repo1.maven.org/maven2/org/apache/tomcat/tomcat/)
            ${mvnFile:+"https://repo1.maven.org/maven2/org/apache/tomcat/tomcat/$mvnFile"} \
        ; do \
            if curl -fL -o "$f" "$distUrl" && [ -s "$f" ]; then \
                success=1; \
                break; \
            fi; \
        done; \
        [ -n "$success" ]; \
    }; \
    \
    ddist 'tomcat.tar.gz' "tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz" "$TOMCAT_VERSION/tomcat-$TOMCAT_VERSION.tar.gz"; \
    echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -; \
    ddist 'tomcat.tar.gz.asc' "tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc" "$TOMCAT_VERSION/tomcat-$TOMCAT_VERSION.tar.gz.asc"; \
    GNUPGHOME="$(mktemp -d)"; export GNUPGHOME; \
    curl -fL -o upstream-KEYS 'https://www.apache.org/dist/tomcat/tomcat-9/KEYS'; \
    gpg --batch --import upstream-KEYS; \
# filter upstream KEYS file to *just* known/precomputed fingerprints
    printf '' > filtered-KEYS; \
# see https://www.apache.org/dist/tomcat/tomcat-9/KEYS
    for key in \
        'DCFD35E0BF8CA7344752DE8B6FB21E8933C60243' \
        'A9C5DF4D22E99998D9875A5110C01C5A2F6059E7' \
        '48F8E69F6390C9F25CFEDCD268248959359E722B' \
    ; do \
        gpg --batch --fingerprint "$key"; \
        gpg --batch --export --armor "$key" >> filtered-KEYS; \
    done; \
    rm -rf "$GNUPGHOME"; \
    GNUPGHOME="$(mktemp -d)"; export GNUPGHOME; \
    gpg --batch --import filtered-KEYS; \
    gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz; \
    tar -xf tomcat.tar.gz --strip-components=1; \
    rm bin/*.bat; \
    rm tomcat.tar.gz*; \
    rm -rf "$GNUPGHOME"; \
    \
    mv webapps webapps.dist; \
    mkdir webapps; \
    \
# clean up anything added temporarily and not later marked as necessary
    microdnf clean all; \
    rm -rf /var/cache/yum /var/tmp/* /tmp/*; \
    \
# sh removes env vars it doesn't support (ones with periods)
# https://github.com/docker-library/tomcat/issues/77
    find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +; \
    \
# fix permissions (especially for running as non-root)
# https://github.com/docker-library/tomcat/issues/35
    chmod -R +rX .; \
    chmod 1777 logs temp work; \
	\
# smoke test
	catalina.sh version

# build tomcat native
FROM builder as compiler

RUN set -eux; \
    \
    microdnf install -y --nodocs \
        apr-devel openssl-devel gcc make redhat-rpm-config; \
    \
    nativeBuildDir="$(mktemp -d)"; \
    tar -xf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1; \
    \
    ( \
        export CATALINA_HOME="$PWD"; \
        cd "$nativeBuildDir/native"; \
        aprConfig="$(command -v apr-1-config)"; \
        ./configure \
            --libdir="$TOMCAT_NATIVE_LIBDIR" \
            --prefix="$CATALINA_HOME" \
            --with-apr="$aprConfig" \
            --with-java-home="$JAVA_HOME" \
            --with-ssl \
        ; \
        nproc="$(nproc)"; \
        make -j "$nproc"; \
        make install; \
    );

# copy tomcat native
FROM builder
COPY --from=compiler ${TOMCAT_NATIVE_LIBDIR} ${TOMCAT_NATIVE_LIBDIR}

# verify Tomcat Native is working properly
RUN set -eux; \
    nativeLines="$(catalina.sh configtest 2>&1)"; \
    nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"; \
    nativeLines="$(echo "$nativeLines" | sort -u)"; \
    if ! echo "$nativeLines" | grep -E 'INFO: Loaded( APR based)? Apache Tomcat Native library' >&2; then \
        echo >&2 "$nativeLines"; \
        exit 1; \
    fi

EXPOSE 8080
CMD ["catalina.sh", "run"]