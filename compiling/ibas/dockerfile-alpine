# 构建运行环境（alpine）
FROM colorcoding/openjdk:8-jdk-alpine as builder

# 维护者
LABEL maintainer="Niuren.Zhu <niuren.zhu@icloud.com>"

# 安装环境
RUN apk add --no-cache curl tar unzip git nodejs npm \
    && rm -rf /var/cache/apk/ \
    && rm -rf /tmp/*.apk

# 环境变量-typescript版本
ARG TS_VERSION=3.9.10
# 安装Node环境
RUN set -x \
    && npm install -g typescript@${TS_VERSION} \
    && npm install -g uglify-es

# 安装Maven
ARG MAVEN_VERSION=3.8.8
ARG USER_HOME_DIR="/root"
ARG SHA=332088670d14fa9ff346e6858ca0acca304666596fec86eea89253bd496d3c90deae2be5091be199f48e09d46cec817c6419d5161fb4ee37871503f472765d00
ARG BASE_URL=https://dlcdn.apache.org/maven/maven-3/${MAVEN_VERSION}/binaries

RUN mkdir -p /usr/share/maven /usr/share/maven/ref \
    && curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz \
    && echo "${SHA}  /tmp/apache-maven.tar.gz" | sha512sum -c - \
    && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \
    && rm -f /tmp/apache-maven.tar.gz \
    && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn

ENV MAVEN_HOME /usr/share/maven
ENV MAVEN_CONFIG "$USER_HOME_DIR/.m2"

COPY conf/maven.settings.xml ${MAVEN_HOME}/conf/settings.xml

# 环境变量-代码目录
ENV CODE_HOME=/root/codes
RUN mkdir -p ${CODE_HOME}

# 编译基本项目
FROM builder as compiler
# 维护者
LABEL maintainer="Niuren.Zhu <niuren.zhu@icloud.com>"
# 获取代码并编译
RUN set -x \
    && cd ${CODE_HOME} \
    && git clone --depth 1 https://github.com/color-coding/ibas-framework.git \
    && cd ibas-framework \
    && ./compile_packages.sh
# 获取代码并编译
RUN set -x \
    && cd ${CODE_HOME} \
    && git clone --depth 1 https://github.com/color-coding/btulz.transforms.git \
    && cd btulz.transforms \
    && ./compile_packages.sh
# 清理ibas相关缓存
RUN set -x \
    && rm -rf ${MAVEN_CONFIG}/repository/org/colorcoding

# 发布镜像
FROM builder
# 缓存maven仓库
COPY --from=compiler ${MAVEN_CONFIG} ${MAVEN_CONFIG}
WORKDIR ${CODE_HOME}